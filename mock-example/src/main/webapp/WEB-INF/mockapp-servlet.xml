<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/integration"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:jms="http://www.springframework.org/schema/integration/jms"
	xmlns:ix= "http://www.springframework.org/schema/integration/xml"
	xmlns:util="http://www.springframework.org/schema/util"
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans		http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/integration	http://www.springframework.org/schema/integration/spring-integration.xsd
		http://www.springframework.org/schema/integration/jms	http://www.springframework.org/schema/integration/jms/spring-integration-jms.xsd
		http://www.springframework.org/schema/integration/xml	http://www.springframework.org/schema/integration/xml/spring-integration-xml.xsd
		http://www.springframework.org/schema/util		http://www.springframework.org/schema/util/spring-util.xsd
		http://www.springframework.org/schema/context       http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/mvc   http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/integration/xml   http://www.springframework.org/schema/integration/xml/spring-integration-xml.xsd
	">

    <mvc:resources mapping="/**" location="/resources/web/" />
    <mvc:annotation-driven/>

    <!--стандартный маппер, чтобы сообщения правильно маршрутизировались внутри MQ -->
    <beans:bean id="defHeaderMapper" class="org.springframework.integration.jms.DefaultJmsHeaderMapper"/>
    <!--Настройки подключения к MQ-->
    <beans:bean id = "jndiConnectionFactory" class="org.springframework.jndi.JndiObjectFactoryBean">
            <beans:property name="jndiName" value="jms/ESB.BPM.NCP.CF"/>
    </beans:bean>
    <beans:bean id="requestQueue" class="org.springframework.jndi.JndiObjectFactoryBean">
            <beans:property name="jndiName" value="jms/ESB.BPM.NCP.IN.MOCK"/>
    </beans:bean>
    <beans:bean id="replyQueue" class="org.springframework.jndi.JndiObjectFactoryBean">
            <beans:property name="jndiName" value="jms/ESB.BPM.NCP.OUT.MOCK"/>
    </beans:bean>

     <beans:bean id="requestQueueCRM" class="org.springframework.jndi.JndiObjectFactoryBean">
            <beans:property name="jndiName" value="jms/ESB.BPM.NCP.REQUEST"/>
    </beans:bean>
    <beans:bean id="replyQueueCRM" class="org.springframework.jndi.JndiObjectFactoryBean">
            <beans:property name="jndiName" value="jms/ESB.BPM.NCP.RESPONSE"/>
    </beans:bean>

    <jms:inbound-gateway
            id="jmsin"
            request-destination="requestQueue"
            request-channel="ESB.BPM.NCP.IN.MOCK"
            reply-channel="ESB.BPM.NCP.OUT.MOCK"
            default-reply-destination="replyQueue"
            header-mapper="defHeaderMapper"
            connection-factory="jndiConnectionFactory"
            receive-timeout="30000"
    />

    <jms:outbound-gateway
            id="jmsout"
            request-destination="requestQueueCRM"
            reply-destination="replyQueueCRM"
            request-channel="ESB.BPM.NCP.REQUEST"
            reply-channel="ESB.BPM.NCP.RESPONSE"
            header-mapper="defHeaderMapper"
            connection-factory="jndiConnectionFactory"
            receive-timeout="30000"
    />

    <!-- Входной и выходной каналы -->	
    <channel id="ESB.BPM.NCP.IN.MOCK">
        <interceptors>
            <wire-tap channel="fromGateLogger"/>
        </interceptors>
    </channel>
    
    <channel id="ESB.BPM.NCP.OUT.MOCK">
        <interceptors>
            <wire-tap channel="toGateLogger"/>
        </interceptors>
    </channel>
    
      <!-- Входной и выходной каналы1 -->	
    <channel id="ESB.BPM.NCP.RESPONSE">
        <interceptors>
            <wire-tap channel="fromGateLoggerCRM"/>
        </interceptors>
    </channel>
    
    <channel id="ESB.BPM.NCP.REQUEST">
        <interceptors>
            <wire-tap channel="toGateLoggerCRM"/>
        </interceptors>
    </channel>  
    
    <!--настройка логгеров -->   
    <logging-channel-adapter id="fromGateLogger" logger-name="fromGateLogger"/>
    <logging-channel-adapter id="toGateLogger" logger-name="toGateLogger"/>
    
    <!--настройка логгеров1 -->   
    <logging-channel-adapter id="fromGateLoggerCRM" logger-name="fromGateLoggerCRM"/>
    <logging-channel-adapter id="toGateLoggerCRM" logger-name="toGateLoggerCRM"/>
    
    <!-- Роутер-->
    <util:map id="sbrfNamespaceMap">
        <beans:entry key="env" value="http://sbrf.ru/NCP/esb/envelope/"/>
    </util:map>
    
    <channel id="defaultChannel"/>
    <channel id="ESBSynCallForNCPDB"/>
    
    <channel id="CreateTask"/>
    <channel id="GetParticipants"/>
    <channel id="SaveDeal"/>
    <channel id="UpdateRef"/>
    <channel id="SrvCalcRating"/>
    <channel id="ASrvUpdateRating"/>
    <channel id="FSrvUpdateRating"/>
    <channel id="SrvConfirmRating"/>
    <channel id="SrvCalcLGD"/>
    <channel id="SrvFinalizeLGD"/>
    <channel id="SrvCalcDebtCapacity"/>
    <channel id="SrvGetFinReport"/>
    <channel id="SrvGetFinAnalysis"/>
    <channel id="SrvGetRatingsAndFactors"/>

    <ix:xpath-router id="operationRouter" input-channel="ESB.BPM.NCP.IN.MOCK" default-output-channel="ESBSynCallForNCPDB" resolution-required="false">
        <ix:xpath-expression expression="/env:Envelope/env:Header/env:operation-name" namespace-map="sbrfNamespaceMap" />
        
        <ix:mapping value="SrvSendApplicationForCBDFProcessing" channel="ESBSynCallForNCPDB"/>
        
        <ix:mapping value="CreateTask" channel="CreateTask"/>
        <ix:mapping value="GetParticipants" channel="GetParticipants"/>
        <ix:mapping value="SaveDeal" channel="SaveDeal"/>
        <ix:mapping value="UpdateRef" channel="UpdateRef"/>
        <ix:mapping value="SrvCalcRating" channel="SrvCalcRating"/>
        <ix:mapping value="SrvConfirmRating" channel="SrvConfirmRating"/>
        <ix:mapping value="SrvCalcLGD" channel="SrvCalcLGD"/>
        <ix:mapping value="SrvFinalizeLGD" channel="SrvFinalizeLGD"/>
        <ix:mapping value="SrvCalcDebtCapacity" channel="SrvCalcDebtCapacity"/>
        <ix:mapping value="SrvGetFinReport" channel="SrvGetFinReport"/>
        <ix:mapping value="SrvGetFinAnalysis" channel="SrvGetFinAnalysis"/>
        <ix:mapping value="SrvGetRatingsAndFactors" channel="SrvGetRatingsAndFactors"/>
        <ix:mapping value="ASrvUpdateRating" channel="ASrvUpdateRating"/>
        <ix:mapping value="FSrvUpdateRating" channel="FSrvUpdateRating"/>
    </ix:xpath-router>

    <!-- здесь уже реализация -->

    <!--old one-->
    <!--<beans:bean id="ESBSynCallNCPDB" class="ru.sbt.bpm.mock.bean.RefreshableXSLTransformer">-->
        <!--<beans:property name="xslPath" value="/WEB-INF/xsl/ESBSynCallForNCPDB.xsl"/>-->
    <!--</beans:bean>-->
    
    <!-- CRM -->
    <beans:bean id="CRM_CreateTask" class="ru.sbt.bpm.mock.bean.RefreshableXSLTransformer">
        <beans:property name="xslPath" value="/WEB-INF/xsl/CRM/CreateTask.xsl"/>
    </beans:bean>
    <beans:bean id="CRM_GetParticipants" class="ru.sbt.bpm.mock.bean.RefreshableXSLTransformer">
        <beans:property name="xslPath" value="/WEB-INF/xsl/CRM/GetParticipants.xsl"/>
    </beans:bean>
    <beans:bean id="CRM_SaveDeal" class="ru.sbt.bpm.mock.bean.RefreshableXSLTransformer">
        <beans:property name="xslPath" value="/WEB-INF/xsl/CRM/SaveDeal.xsl"/>
    </beans:bean>
    <beans:bean id="CRM_UpdateRef" class="ru.sbt.bpm.mock.bean.RefreshableXSLTransformer">
        <beans:property name="xslPath" value="/WEB-INF/xsl/CRM/UpdateRef.xsl"/>
    </beans:bean>
    <!-- AMRLiRT -->
    <beans:bean id="AMRLiRT_SrvCalcRating" class="ru.sbt.bpm.mock.bean.RefreshableXSLTransformer">
        <beans:property name="xslPath" value="/WEB-INF/xsl/AMRLiRT/SrvCalcRating.xsl"/>
    </beans:bean>
    <beans:bean id="AMRLiRT_SrvUpdateRating" class="ru.sbt.bpm.mock.bean.RefreshableXSLTransformer">
        <beans:property name="xslPath" value="/WEB-INF/xsl/AMRLiRT/SrvUpdateRating.xsl"/>
    </beans:bean>
    <beans:bean id="AMRLiRT_SrvConfirmRating" class="ru.sbt.bpm.mock.bean.RefreshableXSLTransformer">
        <beans:property name="xslPath" value="/WEB-INF/xsl/AMRLiRT/SrvConfirmRating.xsl"/>
    </beans:bean>
    <beans:bean id="AMRLiRT_SrvCalcLGD" class="ru.sbt.bpm.mock.bean.RefreshableXSLTransformer">
        <beans:property name="xslPath" value="/WEB-INF/xsl/AMRLiRT/SrvCalcLGD.xsl"/>
    </beans:bean>
    <beans:bean id="AMRLiRT_SrvFinalizeLGD" class="ru.sbt.bpm.mock.bean.RefreshableXSLTransformer">
        <beans:property name="xslPath" value="/WEB-INF/xsl/AMRLiRT/SrvFinalizeLGD.xsl"/>
    </beans:bean>
    <beans:bean id="AMRLiRT_SrvCalcDebtCapacity" class="ru.sbt.bpm.mock.bean.RefreshableXSLTransformer">
        <beans:property name="xslPath" value="/WEB-INF/xsl/AMRLiRT/SrvCalcDebtCapacity.xsl"/>
    </beans:bean>
    <!-- FinRep -->
    <beans:bean id="FinRep_SrvGetFinReport" class="ru.sbt.bpm.mock.bean.RefreshableXSLTransformer">
        <beans:property name="xslPath" value="/WEB-INF/xsl/FinRep/SrvGetFinReport.xsl"/>
    </beans:bean>
    <beans:bean id="FinRep_SrvGetFinAnalysis" class="ru.sbt.bpm.mock.bean.RefreshableXSLTransformer">
        <beans:property name="xslPath" value="/WEB-INF/xsl/FinRep/SrvGetFinAnalysis.xsl"/>
    </beans:bean>
    <beans:bean id="FinRep_SrvGetRatingsAndFactors" class="ru.sbt.bpm.mock.bean.RefreshableXSLTransformer">
        <beans:property name="xslPath" value="/WEB-INF/xsl/FinRep/SrvGetRatingsAndFactors.xsl"/>
    </beans:bean>
    <beans:bean id="FinRep_SrvUpdateRating" class="ru.sbt.bpm.mock.bean.RefreshableXSLTransformer">
        <beans:property name="xslPath" value="/WEB-INF/xsl/FinRep/SrvUpdateRating.xsl"/>
    </beans:bean>

 <!--маппинг трасформеров на каналы-->
    <!--old one-->
    <!--<transformer input-channel="ESBSynCallForNCPDB" output-channel="ESB.BPM.NCP.OUT.MOCK" method="transform" ref="ESBSynCallNCPDB"/>-->
         
    <transformer input-channel="CreateTask" output-channel="ESB.BPM.NCP.OUT.MOCK" method="transform" ref="CRM_CreateTask"/>     
    <transformer input-channel="GetParticipants" output-channel="ESB.BPM.NCP.OUT.MOCK" method="transform" ref="CRM_GetParticipants"/>   
    <transformer input-channel="SaveDeal" output-channel="ESB.BPM.NCP.OUT.MOCK" method="transform" ref="CRM_SaveDeal"/> 
    <transformer input-channel="UpdateRef" output-channel="ESB.BPM.NCP.OUT.MOCK" method="transform" ref="CRM_UpdateRef"/>     
    <transformer input-channel="SrvCalcRating" output-channel="ESB.BPM.NCP.OUT.MOCK" method="transform" ref="AMRLiRT_SrvCalcRating"/>   
    <transformer input-channel="ASrvUpdateRating" output-channel="ESB.BPM.NCP.OUT.MOCK" method="transform" ref="AMRLiRT_SrvUpdateRating"/>
    <transformer input-channel="SrvConfirmRating" output-channel="ESB.BPM.NCP.OUT.MOCK" method="transform" ref="AMRLiRT_SrvConfirmRating"/>     
    <transformer input-channel="SrvCalcLGD" output-channel="ESB.BPM.NCP.OUT.MOCK" method="transform" ref="AMRLiRT_SrvCalcLGD"/>   
    <transformer input-channel="SrvFinalizeLGD" output-channel="ESB.BPM.NCP.OUT.MOCK" method="transform" ref="AMRLiRT_SrvFinalizeLGD"/> 
    <transformer input-channel="SrvCalcDebtCapacity" output-channel="ESB.BPM.NCP.OUT.MOCK" method="transform" ref="AMRLiRT_SrvCalcDebtCapacity"/>     
    <transformer input-channel="SrvGetFinReport" output-channel="ESB.BPM.NCP.OUT.MOCK" method="transform" ref="FinRep_SrvGetFinReport"/>   
    <transformer input-channel="SrvGetFinAnalysis" output-channel="ESB.BPM.NCP.OUT.MOCK" method="transform" ref="FinRep_SrvGetFinAnalysis"/> 
   	<transformer input-channel="SrvGetRatingsAndFactors" output-channel="ESB.BPM.NCP.OUT.MOCK" method="transform" ref="FinRep_SrvGetRatingsAndFactors"/>   
    <transformer input-channel="FSrvUpdateRating" output-channel="ESB.BPM.NCP.OUT.MOCK" method="transform" ref="FinRep_SrvUpdateRating"/>
    
    <context:component-scan base-package="ru.sbt.bpm.mock.controller"/>
    
    <beans:bean id="jspResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <beans:property name="prefix" value="/WEB-INF/jsp/"/>
        <beans:property name="suffix" value=".jsp"/>
    </beans:bean>
    
    <beans:bean id="channelService" class="ru.sbt.bpm.mock.service.ChannelService">
   		 <beans:property name="subscribeChannels">
   		 	<util:list>
   		 		<beans:ref bean="ESB.BPM.NCP.RESPONSE"/>
   		 	</util:list>
   		 </beans:property> 
    </beans:bean>
    
    <beans:bean name="transformService" class="ru.sbt.bpm.mock.service.TransformService"/>
    <beans:bean name="xmlDataService" class="ru.sbt.bpm.mock.service.XmlDataService"/>

    <!--<channel id="test"/>-->
    <!-- Mock gateway to send requests to outbound -->
    <gateway id="systemEntry" default-request-channel="ESB.BPM.NCP.REQUEST" default-reply-channel="ESB.BPM.NCP.RESPONSE"
                 service-interface="ru.sbt.bpm.mock.gateway.ClientService" default-reply-timeout="0" default-request-timeout="0" />
    <!--<gateway id="systemEntry" default-request-channel="test" default-reply-channel="test"-->
                 <!--service-interface="ru.sbt.bpm.mock.gateway.ClientService" />-->

</beans:beans>