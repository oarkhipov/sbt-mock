<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/integration"
             xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
             xmlns:beans="http://www.springframework.org/schema/beans"
             xmlns:util="http://www.springframework.org/schema/util"
             xmlns:context="http://www.springframework.org/schema/context"
             xmlns:mvc="http://www.springframework.org/schema/mvc"
             xmlns:jms="http://www.springframework.org/schema/integration/jms"
             xsi:schemaLocation="http://www.springframework.org/schema/beans		http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/integration	http://www.springframework.org/schema/integration/spring-integration.xsd
		http://www.springframework.org/schema/util		http://www.springframework.org/schema/util/spring-util.xsd
		http://www.springframework.org/schema/context       http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/mvc   http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/integration http://www.springframework.org/schema/integration/spring-integration.xsd http://www.springframework.org/schema/integration/jms http://www.springframework.org/schema/integration/jms/spring-integration-jms.xsd">

    <mvc:resources mapping="/**" location="/resources/web/" />
    <mvc:annotation-driven/>

    <!-- Настройка используемой конфигурации заглушки-->
    <beans:bean class="ru.sbt.bpm.mock.config.MockConfigContainer">
        <beans:constructor-arg value="/resources/MockConfigFiles/PDConfig.xml" type="java.lang.String" />
    </beans:bean>

    <beans:bean id="connectionFactoryString" class="java.lang.String">
        <beans:constructor-arg value="jms/ESB.BPM.NCP.CF"/>
    </beans:bean>
    <beans:bean id="connectionInputString" class="java.lang.String">
        <beans:constructor-arg value="jms/ESB.BYBPM.NCP.IN"/>
    </beans:bean>
    <beans:bean id="connectionOutputString" class="java.lang.String">
        <beans:constructor-arg value="jms/ESB.BYBPM.NCP.OUT"/>
    </beans:bean>

    <!-- - - - - - - - - - - - - - -->
    <!--                           -->
    <!-- ПРЕДВАРИТЕЛЬНАЯ НАСТРОЙКА -->
    <!--                           -->
    <!-- - - - - - - - - - - - - - -->

     <!--Настройки подключения к MQ-->
    <!--<beans:bean id = "jndiConnectionFactory" class="org.springframework.jndi.JndiObjectFactoryBean">-->
            <!--<beans:property name="jndiName" value="#{connectionFactoryString}"/>-->
    <!--</beans:bean>-->
    <!--<beans:bean id="inboundMockQueue" class="org.springframework.jndi.JndiObjectFactoryBean">-->
            <!--<beans:property name="jndiName" value="#{connectionInputString}"/>-->
    <!--</beans:bean>-->
    <!--<beans:bean id="outboundMockQueue" class="org.springframework.jndi.JndiObjectFactoryBean">-->
            <!--<beans:property name="jndiName" value="#{connectionOutputString}"/>-->
    <!--</beans:bean>-->

     <!--<beans:bean id="requestDriverQueue" class="org.springframework.jndi.JndiObjectFactoryBean">-->
            <!--<beans:property name="jndiName" value="#{connectionInputString}"/>-->
    <!--</beans:bean>-->
    <!--<beans:bean id="responseDriverQueue" class="org.springframework.jndi.JndiObjectFactoryBean">-->
            <!--<beans:property name="jndiName" value="#{connectionOutputString}"/>-->
    <!--</beans:bean>-->

    <!--<beans:bean id="defHeaderMapper" class="org.springframework.integration.jms.DefaultJmsHeaderMapper"/>-->

    <!--<jms:inbound-gateway-->
            <!--request-destination="inboundMockQueue"-->
            <!--request-channel="MockInboundRequest"-->
            <!--reply-channel="MockOutboundResponse"-->
            <!--default-reply-destination="outboundMockQueue"-->
            <!--connection-factory="jndiConnectionFactory"-->
    <!--/>-->

    <!--<jms:outbound-gateway-->
            <!--id="jmsout"-->
            <!--request-destination="requestDriverQueue"-->
            <!--reply-destination="responseDriverQueue"-->
            <!--request-channel="DriverOutboundRequest"-->
            <!--reply-channel="DriverInboundResponse"-->
            <!--header-mapper="defHeaderMapper"-->
            <!--connection-factory="jndiConnectionFactory"-->
            <!--reply-timeout="30000"-->
            <!--receive-timeout="30000"-->
    <!--/>-->


    <!-- Входной и выходной каналы Заглушки-->
    <channel id="MockInboundRequest">
        <interceptors>
            <wire-tap channel="MockInboundRequestLogger"/>
            <wire-tap channel="MockInboundRequestExternalLogger"/>
        </interceptors>
    </channel>
    
    <channel id="MockOutboundResponse">
        <interceptors>
            <wire-tap channel="MockOutboundResponseLogger"/>
            <wire-tap channel="MockOutboundResponseExternalLogger"/>
        </interceptors>
    </channel>
    
      <!-- Входной и выходной каналы Драйвера -->

    <channel id="DriverOutboundRequest">
        <interceptors>
            <wire-tap channel="DriverOutboundRequestLogger"/>
            <!--<wire-tap channel="DriverOutboundRequestExternalLogger"/>-->
        </interceptors>
    </channel>

    <channel id="DriverInboundResponse">
        <interceptors>
            <wire-tap channel="DriverInboundResponseLogger"/>
            <!--<wire-tap channel="DriverInboundResponseExternalLogger"/>-->
        </interceptors>
    </channel>


    <!--настройка логгеров -->
    <logging-channel-adapter id="MockInboundRequestLogger" logger-name="MockInboundRequestLogger"/>
    <logging-channel-adapter id="MockOutboundResponseLogger" logger-name="MockOutboundResponseLogger"/>
    
    <!--настройка логгеров1 -->
    <logging-channel-adapter id="DriverOutboundRequestLogger" logger-name="DriverOutboundRequestLogger"/>
    <logging-channel-adapter id="DriverInboundResponseLogger" logger-name="DriverInboundResponseLogger"/>

    <!-- - - - - - - - - - - - - - - - - -->
    <!--                                 -->
    <!-- НАСТРОЙКА ВНЕШНЕГО ЛОГИРОВАНИЯ  -->
    <!--                                 -->
    <!-- - - - - - - - - - - - - - - - - -->

    <channel id="MockInboundRequestExternalLogger"/>
    <channel id="MockOutboundResponseExternalLogger"/>
    <!--<channel id="DriverOutboundRequestExternalLogger"/>-->
    <!--<channel id="DriverInboundResponseExternalLogger"/>-->

    <beans:bean id="messageLogger" class="ru.sbt.bpm.mock.spring.logging.impl.MessageLoggerImpl"/>
    <service-activator id="MockInboundRequestExternalLoggerActivator"
                       input-channel="MockInboundRequestExternalLogger"
                       expression="@messageLogger.logMessage(payload, connectionInputString)"/>
    <service-activator id="MockOutboundResponseExternalLoggerActivator"
                       input-channel="MockOutboundResponseExternalLogger"
                       expression="@messageLogger.logMessage(payload, connectionOutputString)"/>


    <!-- - - - - - - - - - - - -->
    <!--     МАРШРУТИЗАЦИЯ     -->
    <!-- - - - - - - - - - - - -->

    <beans:bean id="operationSelector" class="java.lang.String">
        <beans:constructor-arg value="/env:Envelope/ns1:*[local-name()]"/>
    </beans:bean>

    <!-- Карта неймспейсов-->
    <util:map id="sbrfNamespaceMap">
        <beans:entry key="int" value="http://sbrf.ru/legal/enquiry/integration"/>
        <beans:entry key="typ" value="http://sbrf.ru/legal/enquiry/integration/types"/>
    </util:map>

    <!-- Генерация ответа -->
    <beans:bean id="responseGenerator" class="ru.sbt.bpm.mock.spring.bean.ResponseGenerator"/>
    <service-activator input-channel="MockInboundRequest" output-channel="MockOutboundResponse" expression="@responseGenerator.routeAndGenerate(payload)"/>

    <context:component-scan base-package="ru.sbt.bpm.mock.spring"/>
    
    <beans:bean id="jspResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <beans:property name="prefix" value="/WEB-INF/jsp/"/>
        <beans:property name="suffix" value=".jsp"/>
    </beans:bean>

    <!-- Mock gateway to send requests to outbound -->
    <gateway id="systemEntry"
             error-channel="DriverInboundResponse"
             service-interface="ru.sbt.bpm.mock.spring.integration.gateway.ClientService"
             default-reply-timeout="30000"
             default-request-timeout="30000"
        >
        <method name="send" request-channel="DriverOutboundRequest" reply-channel="DriverInboundResponse"/>
    </gateway>

    <gateway service-interface="ru.sbt.bpm.mock.spring.integration.gateway.TestGatewayService">
        <method name="test" request-channel="test" reply-channel="test"/>
    </gateway>
    <channel id="test"/>


    <!-- For tests!-->
    <bridge input-channel="DriverOutboundRequest" output-channel="DriverInboundResponse"/>
</beans:beans>