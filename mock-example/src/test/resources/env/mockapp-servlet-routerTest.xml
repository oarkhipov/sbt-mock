<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/integration"
             xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
             xmlns:beans="http://www.springframework.org/schema/beans"
             xmlns:jms="http://www.springframework.org/schema/integration/jms"
             xmlns:ix= "http://www.springframework.org/schema/integration/xml"
             xmlns:util="http://www.springframework.org/schema/util"
             xmlns:context="http://www.springframework.org/schema/context"
             xmlns:mvc="http://www.springframework.org/schema/mvc"
             xsi:schemaLocation="
		http://www.springframework.org/schema/beans		http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/integration	http://www.springframework.org/schema/integration/spring-integration.xsd
		http://www.springframework.org/schema/integration/jms	http://www.springframework.org/schema/integration/jms/spring-integration-jms.xsd
		http://www.springframework.org/schema/integration/xml	http://www.springframework.org/schema/integration/xml/spring-integration-xml.xsd
		http://www.springframework.org/schema/util		http://www.springframework.org/schema/util/spring-util.xsd
		http://www.springframework.org/schema/context       http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/mvc   http://www.springframework.org/schema/mvc/spring-mvc.xsd
	">

    <mvc:resources mapping="/**" location="/resources/web/" />
    <mvc:annotation-driven/>

    <!-- Настройка используемой конфигурации заглушки-->
    <beans:bean class="ru.sbt.bpm.mock.config.MockConfigContainer">
        <beans:constructor-arg value="/resources/MockConfigFiles/BBMOConfig.xml" type="java.lang.String" />
    </beans:bean>

    <!-- - - - - - - - - - - - - - -->
    <!--                           -->
    <!-- ПРЕДВАРИТЕЛЬНАЯ НАСТРОЙКА -->
    <!--                           -->
    <!-- - - - - - - - - - - - - - -->

    <!--Настройки подключения к MQ-->
    <!--<beans:bean id = "jndiConnectionFactory" class="org.springframework.jndi.JndiObjectFactoryBean">-->
        <!--<beans:property name="jndiName" value="jms/ESB.BYBPM.NCP.CF"/>-->
    <!--</beans:bean>-->
    <!--<beans:bean id="inboundMockQueue" class="org.springframework.jndi.JndiObjectFactoryBean">-->
        <!--<beans:property name="jndiName" value="jms/ESB.BYBPM.NCP.IN.MOCK"/>-->
    <!--</beans:bean>-->
    <!--<beans:bean id="outboundMockQueue" class="org.springframework.jndi.JndiObjectFactoryBean">-->
        <!--<beans:property name="jndiName" value="jms/ESB.BYBPM.NCP.OUT.MOCK"/>-->
    <!--</beans:bean>-->

    <!--<beans:bean id="requestDriverQueue" class="org.springframework.jndi.JndiObjectFactoryBean">-->
        <!--<beans:property name="jndiName" value="jms/ESB.BYBPM.NCP.REQUEST"/>-->
    <!--</beans:bean>-->
    <!--<beans:bean id="responseDriverQueue" class="org.springframework.jndi.JndiObjectFactoryBean">-->
        <!--<beans:property name="jndiName" value="jms/ESB.BYBPM.NCP.RESPONSE"/>-->
    <!--</beans:bean>-->

    <!--<jms:inbound-gateway-->
            <!--id="jmsin"-->
            <!--request-destination="inboundMockQueue"-->
            <!--request-channel="MockInboundRequest"-->
            <!--reply-channel="MockOutboundResponse"-->
            <!--default-reply-destination="outboundMockQueue"-->
            <!--header-mapper="defHeaderMapper"-->
            <!--connection-factory="jndiConnectionFactory"-->
            <!--/>-->

    <!--<jms:outbound-gateway-->
            <!--id="jmsout"-->
            <!--request-destination="requestDriverQueue"-->
            <!--reply-destination="responseDriverQueue"-->
            <!--request-channel="DriverOutboundRequest"-->
            <!--reply-channel="DriverInboundResponse"-->
            <!--header-mapper="defHeaderMapper"-->
            <!--connection-factory="jndiConnectionFactory"-->
            <!--reply-timeout="30000"-->
            <!--receive-timeout="30000"-->
            <!--/>-->

    <!-- Входной и выходной каналы Заглушки-->
    <channel id="MockInboundRequest">
        <interceptors>
            <wire-tap channel="fromGateLogger"/>
        </interceptors>
    </channel>

    <channel id="MockOutboundResponse">
        <interceptors>
            <wire-tap channel="toGateLogger"/>
        </interceptors>
    </channel>

    <!-- Входной и выходной каналы Драйвера -->
    <channel id="DriverInboundResponse">
        <interceptors>
            <wire-tap channel="fromGateLoggerCRM"/>
        </interceptors>
    </channel>

    <channel id="DriverOutboundRequest">
        <interceptors>
            <wire-tap channel="toGateLoggerCRM"/>
        </interceptors>
    </channel>

    <!--настройка логгеров -->
    <logging-channel-adapter id="fromGateLogger" logger-name="fromGateLogger"/>
    <logging-channel-adapter id="toGateLogger" logger-name="toGateLogger"/>

    <!--настройка логгеров1 -->
    <logging-channel-adapter id="fromGateLoggerCRM" logger-name="fromGateLoggerCRM"/>
    <logging-channel-adapter id="toGateLoggerCRM" logger-name="toGateLoggerCRM"/>

    <beans:bean id="defHeaderMapper" class="org.springframework.integration.jms.DefaultJmsHeaderMapper"/>


    <!-- - - - - - - - - - - - -->
    <!--     МАРШРУТИЗАЦИЯ     -->
    <!-- - - - - - - - - - - - -->


    <!-- Карта неймспейсов-->
    <util:map id="sbrfNamespaceMap">
        <beans:entry key="env" value="http://sbrf.ru/NCP/esb/envelope/"/>
    </util:map>

    <!-- Каналы-->
    <channel id="defaultChannel"/>
    <channel id="DefaultOutputChannelIfNoOperationRouted"/>

    <channel id="CreateTask"/>
    <channel id="GetParticipants"/>
    <channel id="SaveDeal"/>
    <channel id="UpdateRef"/>
    <channel id="CalculateDebtCapacity"/>
    <channel id="CalculateLGD"/>
    <channel id="CalculateRating"/>
    <channel id="ConfirmRating"/>
    <channel id="CorrectRating"/>
    <channel id="FinalizeLGD"/>
    <channel id="getExchangeRates"/>
    <channel id="importFinReport"/>
    <channel id="ImportRating"/>
    <channel id="UpdateRating"/>

    <ix:xpath-router id="operationRouter" input-channel="MockInboundRequest" default-output-channel="DefaultOutputChannelIfNoOperationRouted" resolution-required="false">
        <ix:xpath-expression expression="/env:Envelope/env:Header/env:operation-name" namespace-map="sbrfNamespaceMap" />

        <ix:mapping value="SrvSendApplicationForCBDFProcessing" channel="DefaultOutputChannelIfNoOperationRouted"/>

        <ix:mapping value="CreateTaskClientService" channel="CreateTask"/>
        <ix:mapping value="GetParticipantsOfCreditDeal" channel="GetParticipants"/>
        <ix:mapping value="SaveCreditDealData" channel="SaveDeal"/>
        <ix:mapping value="UpdateReference" channel="UpdateRef"/>
        <ix:mapping value="SrvCalcDebtCapacity" channel="CalculateDebtCapacity"/>
        <ix:mapping value="SrvCalcLGD" channel="CalculateLGD"/>
        <ix:mapping value="SrvCalcRating" channel="CalculateRating"/>
        <ix:mapping value="SrvConfirmRating" channel="ConfirmRating"/>
        <ix:mapping value="SrvUpdateRating" channel="CorrectRating"/>
        <ix:mapping value="SrvFinalizeLGD" channel="FinalizeLGD"/>
        <ix:mapping value="SrvGetExchangeRates" channel="getExchangeRates"/>
        <ix:mapping value="SrvGetFinReport" channel="importFinReport"/>
        <ix:mapping value="SrvGetRatingsAndFactors" channel="ImportRating"/>
        <ix:mapping value="SrvUpdateRating" channel="UpdateRating"/>
    </ix:xpath-router>

    <!-- здесь уже реализация -->

    <!-- CRM -->
    <!--<beans:bean id="CRM_CreateTask" class="ru.sbt.bpm.mock.spring.integration.bean.RefreshableXSLTransformer">-->
        <!--<beans:property name="xslPath" value="/WEB-INF/xsl/CRM/CreateTask.xsl"/>-->
    <!--</beans:bean>-->
    <!--<beans:bean id="CRM_GetParticipants" class="ru.sbt.bpm.mock.spring.integration.bean.RefreshableXSLTransformer">-->
        <!--<beans:property name="xslPath" value="/WEB-INF/xsl/CRM/GetParticipants.xsl"/>-->
    <!--</beans:bean>-->
    <!--<beans:bean id="CRM_SaveDeal" class="ru.sbt.bpm.mock.spring.integration.bean.RefreshableXSLTransformer">-->
        <!--<beans:property name="xslPath" value="/WEB-INF/xsl/CRM/SaveDeal.xsl"/>-->
    <!--</beans:bean>-->
    <!--<beans:bean id="CRM_UpdateRef" class="ru.sbt.bpm.mock.spring.integration.bean.RefreshableXSLTransformer">-->
        <!--<beans:property name="xslPath" value="/WEB-INF/xsl/CRM/UpdateRef.xsl"/>-->
    <!--</beans:bean>-->
    <!--&lt;!&ndash; AMRLiRT &ndash;&gt;-->
    <!--<beans:bean id="AMRLiRT_CalculateDebtCapacity" class="ru.sbt.bpm.mock.spring.integration.bean.RefreshableXSLTransformer">-->
        <!--<beans:property name="xslPath" value="/WEB-INF/xsl/AMRLiRT/CalculateDebtCapacity.xsl"/>-->
    <!--</beans:bean>-->
    <!--<beans:bean id="AMRLiRT_CalculateLGD" class="ru.sbt.bpm.mock.spring.integration.bean.RefreshableXSLTransformer">-->
        <!--<beans:property name="xslPath" value="/WEB-INF/xsl/AMRLiRT/CalculateLGD.xsl"/>-->
    <!--</beans:bean>-->
    <!--<beans:bean id="AMRLiRT_CalculateRating" class="ru.sbt.bpm.mock.spring.integration.bean.RefreshableXSLTransformer">-->
        <!--<beans:property name="xslPath" value="/WEB-INF/xsl/AMRLiRT/CalculateRating.xsl"/>-->
    <!--</beans:bean>-->
    <!--<beans:bean id="AMRLiRT_ConfirmRating" class="ru.sbt.bpm.mock.spring.integration.bean.RefreshableXSLTransformer">-->
        <!--<beans:property name="xslPath" value="/WEB-INF/xsl/AMRLiRT/ConfirmRating.xsl"/>-->
    <!--</beans:bean>-->
    <!--<beans:bean id="AMRLiRT_CorrectRating" class="ru.sbt.bpm.mock.spring.integration.bean.RefreshableXSLTransformer">-->
        <!--<beans:property name="xslPath" value="/WEB-INF/xsl/AMRLiRT/CorrectRating.xsl"/>-->
    <!--</beans:bean>-->
    <!--<beans:bean id="AMRLiRT_FinalizeLGD" class="ru.sbt.bpm.mock.spring.integration.bean.RefreshableXSLTransformer">-->
        <!--<beans:property name="xslPath" value="/WEB-INF/xsl/AMRLiRT/FinalizeLGD.xsl"/>-->
    <!--</beans:bean>-->
    <!--&lt;!&ndash; FinRep &ndash;&gt;-->
    <!--<beans:bean id="FinRep_getExchangeRates" class="ru.sbt.bpm.mock.spring.integration.bean.RefreshableXSLTransformer">-->
        <!--<beans:property name="xslPath" value="/WEB-INF/xsl/FinRep/getExchangeRates.xsl"/>-->
    <!--</beans:bean>-->
    <!--<beans:bean id="FinRep_importFinReport" class="ru.sbt.bpm.mock.spring.integration.bean.RefreshableXSLTransformer">-->
        <!--<beans:property name="xslPath" value="/WEB-INF/xsl/FinRep/importFinReport.xsl"/>-->
    <!--</beans:bean>-->
    <!--<beans:bean id="FinRep_ImportRating" class="ru.sbt.bpm.mock.spring.integration.bean.RefreshableXSLTransformer">-->
        <!--<beans:property name="xslPath" value="/WEB-INF/xsl/FinRep/ImportRating.xsl"/>-->
    <!--</beans:bean>-->
    <!--<beans:bean id="FinRep_UpdateRating" class="ru.sbt.bpm.mock.spring.integration.bean.RefreshableXSLTransformer">-->
        <!--<beans:property name="xslPath" value="/WEB-INF/xsl/FinRep/UpdateRating.xsl"/>-->
    <!--</beans:bean>-->

    <!--&lt;!&ndash;маппинг трасформеров на каналы&ndash;&gt;-->

    <!--<transformer input-channel="CreateTask" output-channel="MockOutboundResponse" method="transform" ref="CRM_CreateTask"/>-->
    <!--<transformer input-channel="GetParticipants" output-channel="MockOutboundResponse" method="transform" ref="CRM_GetParticipants"/>-->
    <!--<transformer input-channel="SaveDeal" output-channel="MockOutboundResponse" method="transform" ref="CRM_SaveDeal"/>-->
    <!--<transformer input-channel="UpdateRef" output-channel="MockOutboundResponse" method="transform" ref="CRM_UpdateRef"/>-->
    <!--<transformer input-channel="CalculateDebtCapacity" output-channel="MockOutboundResponse" method="transform" ref="AMRLiRT_CalculateDebtCapacity"/>-->
    <!--<transformer input-channel="CalculateLGD" output-channel="MockOutboundResponse" method="transform" ref="AMRLiRT_CalculateLGD"/>-->
    <!--<transformer input-channel="CalculateRating" output-channel="MockOutboundResponse" method="transform" ref="AMRLiRT_CalculateRating"/>-->
    <!--<transformer input-channel="ConfirmRating" output-channel="MockOutboundResponse" method="transform" ref="AMRLiRT_ConfirmRating"/>-->
    <!--<transformer input-channel="CorrectRating" output-channel="MockOutboundResponse" method="transform" ref="AMRLiRT_CorrectRating"/>-->
    <!--<transformer input-channel="FinalizeLGD" output-channel="MockOutboundResponse" method="transform" ref="AMRLiRT_FinalizeLGD"/>-->
    <!--<transformer input-channel="getExchangeRates" output-channel="MockOutboundResponse" method="transform" ref="FinRep_getExchangeRates"/>-->
    <!--<transformer input-channel="importFinReport" output-channel="MockOutboundResponse" method="transform" ref="FinRep_importFinReport"/>-->
    <!--<transformer input-channel="ImportRating" output-channel="MockOutboundResponse" method="transform" ref="FinRep_ImportRating"/>-->
    <!--<transformer input-channel="UpdateRating" output-channel="MockOutboundResponse" method="transform" ref="FinRep_UpdateRating"/>-->

    <context:component-scan base-package="ru.sbt.bpm.mock.spring"/>

    <beans:bean id="jspResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <beans:property name="prefix" value="/WEB-INF/jsp/"/>
        <beans:property name="suffix" value=".jsp"/>
    </beans:bean>

    <beans:bean id="channelService" class="ru.sbt.bpm.mock.spring.integration.service.ChannelService">
        <beans:property name="subscribeChannels">
            <util:list>
                <beans:ref bean="DriverInboundResponse"/>
                <beans:ref bean="DefaultOutputChannelIfNoOperationRouted"/>
                <beans:ref bean="SaveDeal"/>
            </util:list>
        </beans:property>
    </beans:bean>

    <!--<beans:bean name="transformService" class="ru.sbt.bpm.mock.spring.integration.service.TransformService"/>-->
    <!--<beans:bean name="xmlDataService" class="ru.sbt.bpm.mock.spring.integration.service.XmlDataService"/>-->

    <!--<channel id="test"/>-->
    <!-- Mock gateway to send requests to outbound -->
    <gateway id="systemEntry" default-request-channel="DriverOutboundRequest" default-reply-channel="DriverInboundResponse"
             service-interface="ru.sbt.bpm.mock.spring.integration.gateway.ClientService" />
    <!--<gateway id="systemEntry" default-request-channel="test" default-reply-channel="test"-->
    <!--service-interface="ru.sbt.bpm.mock.spring.integration.gateway.ClientService" />-->
</beans:beans>