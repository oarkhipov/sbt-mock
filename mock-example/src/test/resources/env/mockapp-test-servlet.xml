<?xml version="1.0" encoding="UTF-8"?>
        <!--                 -->
        <!--                 -->
        <!--     THIS IS COPY OF mockapp-servlet.xml            -->
        <!--                 -->
        <!--                 -->
<beans:beans xmlns="http://www.springframework.org/schema/integration"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:jms="http://www.springframework.org/schema/integration/jms"
	xmlns:ix= "http://www.springframework.org/schema/integration/xml"
	xmlns:util="http://www.springframework.org/schema/util"
       xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans		http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/integration	http://www.springframework.org/schema/integration/spring-integration.xsd
		http://www.springframework.org/schema/integration/jms	http://www.springframework.org/schema/integration/jms/spring-integration-jms.xsd
		http://www.springframework.org/schema/integration/xml	http://www.springframework.org/schema/integration/xml/spring-integration-xml.xsd
		http://www.springframework.org/schema/util		http://www.springframework.org/schema/util/spring-util.xsd
		http://www.springframework.org/schema/context       http://www.springframework.org/schema/context/spring-context.xsd
	">

    <!-- Настройки подключения к MQ -->
    <!--<beans:bean id = "jndiConnectionFactory" class="org.springframework.jndi.JndiObjectFactoryBean">-->
            <!--<beans:property name="jndiName" value="jms/ESB.BPM.NCP.CF"/>-->
    <!--</beans:bean>-->

    <!--<beans:bean id="requestQueue" class="org.springframework.jndi.JndiObjectFactoryBean">-->
            <!--<beans:property name="jndiName" value="jms/ESB.BPM.NCP.IN.MOCK"/>-->
    <!--</beans:bean>-->
    <!--<beans:bean id="replyQueue" class="org.springframework.jndi.JndiObjectFactoryBean">-->
            <!--<beans:property name="jndiName" value="jms/ESB.BPM.NCP.OUT.MOCK"/>-->
    <!--</beans:bean>-->
    <!---->
     <!--<beans:bean id="requestQueueCRM" class="org.springframework.jndi.JndiObjectFactoryBean">-->
            <!--<beans:property name="jndiName" value="jms/ESB.BPM.NCP.REQUEST"/>-->
    <!--</beans:bean>-->
    <!--<beans:bean id="replyQueueCRM" class="org.springframework.jndi.JndiObjectFactoryBean">-->
            <!--<beans:property name="jndiName" value="jms/ESB.BPM.NCP.RESPONSE"/>-->
    <!--</beans:bean>-->
    <!---->

    <!--<jms:inbound-gateway-->
            <!--id="jmsin"-->
            <!--request-destination="requestQueue"-->
            <!--request-channel="ESB.BPM.NCP.IN.MOCK"-->
            <!--reply-channel="ESB.BPM.NCP.OUT.MOCK"-->
            <!--default-reply-destination="replyQueue"-->
            <!--header-mapper="defHeaderMapper"-->
            <!--connection-factory="jndiConnectionFactory"-->
    <!--/>-->

    <!--<jms:outbound-gateway-->
            <!--id="jmsout"-->
            <!--request-destination="requestQueueCRM"-->
            <!--reply-destination="replyQueueCRM"-->
            <!--request-channel="ESB.BPM.NCP.REQUEST"-->
            <!--reply-channel="ESB.BPM.NCP.RESPONSE"-->
            <!--header-mapper="defHeaderMapper"-->
            <!--connection-factory="jndiConnectionFactory"-->
    <!--/>-->

    <!-- Входной и выходной каналы -->	
    <channel id="ESB.BPM.NCP.IN.MOCK">
        <interceptors>
            <wire-tap channel="fromGateLogger"/>
        </interceptors>
    </channel>
    
    <channel id="ESB.BPM.NCP.OUT.MOCK">
        <interceptors>
            <wire-tap channel="toGateLogger"/>
        </interceptors>
    </channel>
    
      <!-- Входной и выходной каналы1 -->	
    <channel id="ESB.BPM.NCP.RESPONSE">
        <interceptors>
            <wire-tap channel="fromGateLoggerCRM"/>
        </interceptors>
    </channel>
    
    <channel id="ESB.BPM.NCP.REQUEST">
        <interceptors>
            <wire-tap channel="toGateLoggerCRM"/>
        </interceptors>
    </channel>  
    
    <!--настройка логгеров -->   
    <logging-channel-adapter id="fromGateLogger" logger-name="fromGateLogger"/>
    <logging-channel-adapter id="toGateLogger" logger-name="toGateLogger"/>
    
    <!--настройка логгеров1 -->   
    <logging-channel-adapter id="fromGateLoggerCRM" logger-name="fromGateLoggerCRM"/>
    <logging-channel-adapter id="toGateLoggerCRM" logger-name="toGateLoggerCRM"/>
    
    <beans:bean id="defHeaderMapper" class="org.springframework.integration.jms.DefaultJmsHeaderMapper"/>
     
    <!-- Роутер-->
    <util:map id="sbrfNamespaceMap">
        <beans:entry key="env" value="http://sbrf.ru/NCP/esb/envelope/"/>
    </util:map>
    
    <channel id="defaultChannel"/>
    <channel id="ESBSynCallForNCPDB"/>
    
    <channel id="CreateTask"/>
    <channel id="GetParticipants"/>
    <channel id="SaveDeal"/>
    <channel id="UpdateRef"/>
    <channel id="CalculateRating"/>
    <channel id="UpdateRating"/>
    <channel id="ConfirmRating"/>
    <channel id="CalculateLGD"/>
    <channel id="FinalizeLGD"/>
    <channel id="CalculateDebtCapacity"/>
    <channel id="FinReportImport"/>
    <channel id="FinAnalysisImport"/>
    <channel id="ImportRating"/>

    <ix:xpath-router id="operationRouter" input-channel="ESB.BPM.NCP.IN.MOCK" default-output-channel="ESBSynCallForNCPDB" resolution-required="false">
        <ix:xpath-expression expression="/env:Envelope/env:Header/env:operation-name" namespace-map="sbrfNamespaceMap" />
        

        <ix:mapping value="CreateTask" channel="CreateTask"/>
        <ix:mapping value="GetParticipants" channel="GetParticipants"/>
        <ix:mapping value="SaveDeal" channel="SaveDeal"/>
        <ix:mapping value="UpdateRef" channel="UpdateRef"/>
        <ix:mapping value="CalculateRating" channel="CalculateRating"/>
        <ix:mapping value="UpdateRating" channel="UpdateRating"/>
        <ix:mapping value="ConfirmRating" channel="ConfirmRating"/>
        <ix:mapping value="CalculateLGD" channel="CalculateLGD"/>
        <ix:mapping value="FinalizeLGD" channel="FinalizeLGD"/>
        <ix:mapping value="CalculateDebtCapacity" channel="CalculateDebtCapacity"/>
        <ix:mapping value="FinReportImport" channel="FinReportImport"/>
        <ix:mapping value="FinAnalysisImport" channel="FinAnalysisImport"/>
        <ix:mapping value="ImportRating" channel="ImportRating"/>
        <ix:mapping value="UpdateRating" channel="UpdateRating"/>
    </ix:xpath-router>

    <!-- здесь уже реализация -->

    <!--old one-->
    <!--<beans:bean id="ESBSynCallNCPDB" class="ru.sbt.bpm.mock.bean.RefreshableXSLTransformer">-->
        <!--<beans:property name="xslPath" value="/WEB-INF/xsl/ESBSynCallForNCPDB.xsl"/>-->
    <!--</beans:bean>-->
    
    <!-- CRM -->
    <beans:bean id="CRM_CreateTask" class="ru.sbt.bpm.mock.bean.RefreshableXSLTransformer">
        <beans:property name="xslPath" value="/WEB-INF/xsl/CRM/CreateTask.xsl"/>
    </beans:bean>
    <beans:bean id="CRM_GetParticipants" class="ru.sbt.bpm.mock.bean.RefreshableXSLTransformer">
        <beans:property name="xslPath" value="/WEB-INF/xsl/CRM/GetParticipants.xsl"/>
    </beans:bean>
    <beans:bean id="CRM_SaveDeal" class="ru.sbt.bpm.mock.bean.RefreshableXSLTransformer">
        <beans:property name="xslPath" value="/WEB-INF/xsl/CRM/SaveDeal.xsl"/>
    </beans:bean>
    <beans:bean id="CRM_UpdateRef" class="ru.sbt.bpm.mock.bean.RefreshableXSLTransformer">
        <beans:property name="xslPath" value="/WEB-INF/xsl/CRM/UpdateRef.xsl"/>
    </beans:bean>
    <!-- AMRLiRT -->
    <beans:bean id="AMRLiRT_CalculateRating" class="ru.sbt.bpm.mock.bean.RefreshableXSLTransformer">
        <beans:property name="xslPath" value="/WEB-INF/xsl/AMRLiRT/CalculateRating.xsl"/>
    </beans:bean>
    <!--<beans:bean id="AMRLiRT_UpdateRating" class="ru.sbt.bpm.mock.bean.RefreshableXSLTransformer">-->
        <!--<beans:property name="xslPath" value="/WEB-INF/xsl/AMRLiRT/UpdateRating.xsl"/>-->
    <!--</beans:bean>-->
    <beans:bean id="AMRLiRT_ConfirmRating" class="ru.sbt.bpm.mock.bean.RefreshableXSLTransformer">
        <beans:property name="xslPath" value="/WEB-INF/xsl/AMRLiRT/ConfirmRating.xsl"/>
    </beans:bean>
    <beans:bean id="AMRLiRT_CalculateLGD" class="ru.sbt.bpm.mock.bean.RefreshableXSLTransformer">
        <beans:property name="xslPath" value="/WEB-INF/xsl/AMRLiRT/CalculateLGD.xsl"/>
    </beans:bean>
    <beans:bean id="AMRLiRT_FinalizeLGD" class="ru.sbt.bpm.mock.bean.RefreshableXSLTransformer">
        <beans:property name="xslPath" value="/WEB-INF/xsl/AMRLiRT/FinalizeLGD.xsl"/>
    </beans:bean>
    <beans:bean id="AMRLiRT_CalculateDebtCapacity" class="ru.sbt.bpm.mock.bean.RefreshableXSLTransformer">
        <beans:property name="xslPath" value="/WEB-INF/xsl/AMRLiRT/CalculateDebtCapacity.xsl"/>
    </beans:bean>
    <!-- FinRep -->
    <beans:bean id="FinRep_FinReportImport" class="ru.sbt.bpm.mock.bean.RefreshableXSLTransformer">
        <beans:property name="xslPath" value="/WEB-INF/xsl/FinRep/FinReportImport.xsl"/>
    </beans:bean>
    <beans:bean id="FinRep_FinAnalysisImport" class="ru.sbt.bpm.mock.bean.RefreshableXSLTransformer">
        <beans:property name="xslPath" value="/WEB-INF/xsl/FinRep/FinAnalysisImport.xsl"/>
    </beans:bean>
    <beans:bean id="FinRep_ImportRating" class="ru.sbt.bpm.mock.bean.RefreshableXSLTransformer">
        <beans:property name="xslPath" value="/WEB-INF/xsl/FinRep/ImportRating.xsl"/>
    </beans:bean>
    <beans:bean id="FinRep_UpdateRating" class="ru.sbt.bpm.mock.bean.RefreshableXSLTransformer">
        <beans:property name="xslPath" value="/WEB-INF/xsl/FinRep/UpdateRating.xsl"/>
    </beans:bean>

    
 <!--маппинг трасформеров на каналы-->
    <!--old one-->
    <!--<transformer input-channel="ESBSynCallForNCPDB" output-channel="ESB.BPM.NCP.OUT.MOCK" method="transform" ref="ESBSynCallNCPDB"/>-->
         
    <transformer input-channel="CreateTask" output-channel="ESB.BPM.NCP.OUT.MOCK" method="transform" ref="CRM_CreateTask"/>     
    <transformer input-channel="GetParticipants" output-channel="ESB.BPM.NCP.OUT.MOCK" method="transform" ref="CRM_GetParticipants"/>   
    <transformer input-channel="SaveDeal" output-channel="ESB.BPM.NCP.OUT.MOCK" method="transform" ref="CRM_SaveDeal"/> 
    <transformer input-channel="UpdateRef" output-channel="ESB.BPM.NCP.OUT.MOCK" method="transform" ref="CRM_UpdateRef"/>     
    <transformer input-channel="CalculateRating" output-channel="ESB.BPM.NCP.OUT.MOCK" method="transform" ref="AMRLiRT_CalculateRating"/>
    <!--<transformer input-channel="UpdateRating" output-channel="ESB.BPM.NCP.OUT.MOCK" method="transform" ref="AMRLiRT_UpdateRating"/>-->
    <transformer input-channel="ConfirmRating" output-channel="ESB.BPM.NCP.OUT.MOCK" method="transform" ref="AMRLiRT_ConfirmRating"/>
    <transformer input-channel="CalculateLGD" output-channel="ESB.BPM.NCP.OUT.MOCK" method="transform" ref="AMRLiRT_CalculateLGD"/>
    <transformer input-channel="FinalizeLGD" output-channel="ESB.BPM.NCP.OUT.MOCK" method="transform" ref="AMRLiRT_FinalizeLGD"/>
    <transformer input-channel="CalculateDebtCapacity" output-channel="ESB.BPM.NCP.OUT.MOCK" method="transform" ref="AMRLiRT_CalculateDebtCapacity"/>
    <transformer input-channel="FinReportImport" output-channel="ESB.BPM.NCP.OUT.MOCK" method="transform" ref="FinRep_FinReportImport"/>
    <transformer input-channel="FinAnalysisImport" output-channel="ESB.BPM.NCP.OUT.MOCK" method="transform" ref="FinRep_FinAnalysisImport"/>
   	<transformer input-channel="ImportRating" output-channel="ESB.BPM.NCP.OUT.MOCK" method="transform" ref="FinRep_ImportRating"/>

    <context:component-scan base-package="ru.sbt.bpm.mock.controller"/>
    
    <beans:bean id="jspResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <beans:property name="prefix" value="/WEB-INF/jsp/"/>
        <beans:property name="suffix" value=".jsp"/>
    </beans:bean>

    <!--MODIFIED FOR TESTING-->
    <beans:bean id="channelService" class="ru.sbt.bpm.mock.service.ChannelService">
   		 <beans:property name="subscribeChannels">
   		 	<util:list>
   		 		<beans:ref bean="ESB.BPM.NCP.RESPONSE"/>
   		 		<beans:ref bean="ESB.BPM.NCP.OUT.MOCK"/>
   		 	</util:list>
   		 </beans:property> 
    </beans:bean>
    
    <beans:bean name="transformService" class="ru.sbt.bpm.mock.service.TransformService"/>
    <beans:bean name="xmlDataService" class="ru.sbt.bpm.mock.service.XmlDataService"/>
    <channel id="test"/>
    <!-- Mock gateway to send requests to outbound -->
    <!--<gateway id="systemEntry" default-request-channel="ESB.BPM.NCP.REQUEST" default-reply-channel="ESB.BPM.NCP.RESPONSE"-->
    <!--service-interface="ru.sbt.bpm.mock.gateway.ClientService" />-->
    <gateway id="systemEntry" default-request-channel="test" default-reply-channel="test"
             service-interface="ru.sbt.bpm.mock.gateway.ClientService" />
</beans:beans>