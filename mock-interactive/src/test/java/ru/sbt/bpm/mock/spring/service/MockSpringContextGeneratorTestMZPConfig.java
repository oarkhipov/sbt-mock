package ru.sbt.bpm.mock.spring.service;

import lombok.extern.slf4j.Slf4j;
import org.apache.commons.io.input.BOMInputStream;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.test.context.ContextConfiguration;
import org.springframework.test.context.testng.AbstractTestNGSpringContextTests;
import org.testng.annotations.Test;
import ru.sbt.bpm.mock.context.generator.service.SpringContextGeneratorService;

import javax.xml.bind.JAXBException;
import javax.xml.stream.XMLStreamException;
import javax.xml.transform.TransformerException;
import java.io.*;

import static org.testng.Assert.assertEquals;

/**
 * Created by sbt-hodakovskiy-da on 11.07.2016.
 */

@Slf4j
@ContextConfiguration({ "/env/mockapp-servlet-test-context-generator-services-mzp.xml" })
public class MockSpringContextGeneratorTestMZPConfig extends AbstractTestNGSpringContextTests {

	@Autowired
	MockSpringContextGeneratorService generator;

	@Autowired
	SpringContextGeneratorService generatorService;

	@Test
	public void testGettingData () throws JAXBException, IOException, TransformerException, XMLStreamException {
		String actual = generatorService.toXml(generator.generateContext());
		log.debug(actual);
		assertEquals("<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n"
		             + "<beans xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n"
		             + "       xmlns:ns3=\"http://www.springframework.org/schema/integration/jms\"\n"
		             + "       xmlns:ns2=\"http://www.springframework.org/schema/integration\"\n"
		             + "       xmlns=\"http://www.springframework.org/schema/beans\"\n"
		             + "       xsi:schemaLocation=\"http://www.springframework.org/schema/beans        http://www"
		             + ".springframework.org/schema/beans/spring-beans.xsd         http://www.springframework"
		             + ".org/schema/integration http://www.springframework.org/schema/integration/spring-integration"
		             + ".xsd         http://www.springframework.org/schema/integration/jms http://www.springframework"
		             + ".org/schema/integration/jms/spring-integration-jms.xsd\">\n"
		             + "   <import resource=\"../contextConfigs/base-config.xml\"/>\n"
		             + "   <import resource=\"../contextConfigs/logging-config.xml\"/>\n"
		             + "   <bean class=\"org.springframework.jndi.JndiObjectFactoryBean\"\n"
		             + "         id=\"jmsQPrometheusJupiterSaCf_jndiConnectionFactory\">\n"
		             + "      <property name=\"jndiName\" value=\"jms/Q.PROMETHEUS.JUPITER-SA.CF\"/>\n"
		             + "   </bean>\n"
		             + "   <bean class=\"org.springframework.jndi.JndiObjectFactoryBean\"\n"
		             + "         id=\"jmsQPrometheusJupiterSaIn_queue\">\n"
		             + "      <property name=\"jndiName\" value=\"jms/Q.PROMETHEUS.JUPITER-SA.IN\"/>\n"
		             + "   </bean>\n"
		             + "   <bean class=\"org.springframework.jndi.JndiObjectFactoryBean\"\n"
		             + "         id=\"jmsQPrometheusJupiterSaOut_queue\">\n"
		             + "      <property name=\"jndiName\" value=\"jms/Q.PROMETHEUS.JUPITER-SA.OUT\"/>\n"
		             + "   </bean>\n"
		             + "   <bean class=\"org.springframework.jndi.JndiObjectFactoryBean\"\n"
		             + "         id=\"jmsQPrometheusJupiterRegIn_queue\">\n"
		             + "      <property name=\"jndiName\" value=\"jms/Q.PROMETHEUS.JUPITER-REG.IN\"/>\n"
		             + "   </bean>\n"
		             + "   <bean class=\"org.springframework.jndi.JndiObjectFactoryBean\"\n"
		             + "         id=\"jmsQPrometheusJupiterRegOut_queue\">\n"
		             + "      <property name=\"jndiName\" value=\"jms/Q.PROMETHEUS.JUPITER-REG.OUT\"/>\n"
		             + "   </bean>\n"
		             + "   <ns2:channel id=\"jmsQPrometheusJupiterSaIn_channel\"/>\n"
		             + "   <ns2:channel id=\"jmsQPrometheusJupiterSaOut_channel\"/>\n"
		             + "   <ns3:inbound-gateway request-destination=\"jmsQPrometheusJupiterSaIn_queue\"\n"
		             + "                        default-reply-destination=\"jmsQPrometheusJupiterSaOut_queue\"\n"
		             + "                        request-channel=\"jmsQPrometheusJupiterSaIn_channel\"\n"
		             + "                        reply-channel=\"jmsQPrometheusJupiterSaOut_channel\"\n"
		             + "                        id=\"jmsQPrometheusJupiterSaCf_jmsin\"\n"
		             + "                        connection-factory=\"jmsQPrometheusJupiterSaCf_jndiConnectionFactory"
		             + "\"/>\n"
		             + "   <ns2:channel id=\"jmsQPrometheusJupiterRegIn_channel\"/>\n"
		             + "   <ns2:channel id=\"jmsQPrometheusJupiterRegOut_channel\"/>\n"
		             + "   <ns3:outbound-gateway id=\"jmsQPrometheusJupiterSaCf_jmsout\"\n"
		             + "                         request-channel=\"jmsQPrometheusJupiterRegIn_channel\"\n"
		             + "                         reply-channel=\"jmsQPrometheusJupiterRegOut_channel\"\n"
		             + "                         receive-timeout=\"30000\"\n"
		             + "                         reply-timeout=\"30000\"\n"
		             + "                         request-destination=\"jmsQPrometheusJupiterRegIn_queue\"\n"
		             + "                         reply-destination=\"jmsQPrometheusJupiterRegOut_queue\"\n"
		             + "                         connection-factory=\"jmsQPrometheusJupiterSaCf_jndiConnectionFactory"
		             + "\"\n"
		             + "                         header-mapper=\"defHeaderMapper\"/>\n"
		             + "   <bean class=\"org.springframework.jndi.JndiObjectFactoryBean\"\n"
		             + "         id=\"jmsQPrometheusJupiterRegCf_jndiConnectionFactory\">\n"
		             + "      <property name=\"jndiName\" value=\"jms/Q.PROMETHEUS.JUPITER-REG.CF\"/>\n"
		             + "   </bean>\n"
		             + "   <bean class=\"org.springframework.jndi.JndiObjectFactoryBean\"\n"
		             + "         id=\"jmsQPrometheusJupiterResponse_queue\">\n"
		             + "      <property name=\"jndiName\" value=\"jms/Q.PROMETHEUS.JUPITER.RESPONSE\"/>\n"
		             + "   </bean>\n"
		             + "   <bean class=\"org.springframework.jndi.JndiObjectFactoryBean\"\n"
		             + "         id=\"jmsQPrometheusJupiterRequest_queue\">\n"
		             + "      <property name=\"jndiName\" value=\"jms/Q.PROMETHEUS.JUPITER.REQUEST\"/>\n"
		             + "   </bean>\n"
		             + "   <ns3:inbound-gateway request-destination=\"jmsQPrometheusJupiterRegIn_queue\"\n"
		             + "                        default-reply-destination=\"jmsQPrometheusJupiterRegOut_queue\"\n"
		             + "                        request-channel=\"jmsQPrometheusJupiterRegIn_channel\"\n"
		             + "                        reply-channel=\"jmsQPrometheusJupiterRegOut_channel\"\n"
		             + "                        id=\"jmsQPrometheusJupiterRegCf_jmsin\"\n"
		             + "                        connection-factory=\"jmsQPrometheusJupiterRegCf_jndiConnectionFactory"
		             + "\"/>\n"
		             + "   <ns2:channel id=\"jmsQPrometheusJupiterResponse_channel\"/>\n"
		             + "   <ns2:channel id=\"jmsQPrometheusJupiterRequest_channel\"/>\n"
		             + "   <ns3:outbound-gateway id=\"jmsQPrometheusJupiterRegCf_jmsout\"\n"
		             + "                         request-channel=\"jmsQPrometheusJupiterResponse_channel\"\n"
		             + "                         reply-channel=\"jmsQPrometheusJupiterRequest_channel\"\n"
		             + "                         receive-timeout=\"30000\"\n"
		             + "                         reply-timeout=\"30000\"\n"
		             + "                         request-destination=\"jmsQPrometheusJupiterResponse_queue\"\n"
		             + "                         reply-destination=\"jmsQPrometheusJupiterRequest_queue\"\n"
		             + "                         connection-factory=\"jmsQPrometheusJupiterRegCf_jndiConnectionFactory"
		             + "\"\n"
		             + "                         header-mapper=\"defHeaderMapper\"/>\n"
		             + "   <bean class=\"org.springframework.jndi.JndiObjectFactoryBean\"\n"
		             + "         id=\"jmsEsbPrometheusCrmCf_jndiConnectionFactory\">\n"
		             + "      <property name=\"jndiName\" value=\"jms/ESB.PROMETHEUS.CRM.CF\"/>\n"
		             + "   </bean>\n"
		             + "   <bean class=\"org.springframework.jndi.JndiObjectFactoryBean\"\n"
		             + "         id=\"jmsEsbPrometheusCrmIn_queue\">\n"
		             + "      <property name=\"jndiName\" value=\"jms/ESB.PROMETHEUS.CRM.IN\"/>\n"
		             + "   </bean>\n"
		             + "   <bean class=\"org.springframework.jndi.JndiObjectFactoryBean\"\n"
		             + "         id=\"jmsEsbPrometheusCrmOut_queue\">\n"
		             + "      <property name=\"jndiName\" value=\"jms/ESB.PROMETHEUS.CRM.OUT\"/>\n"
		             + "   </bean>\n"
		             + "   <bean class=\"org.springframework.jndi.JndiObjectFactoryBean\"\n"
		             + "         id=\"jmsEsbPrometheusCrmResponse_queue\">\n"
		             + "      <property name=\"jndiName\" value=\"jms/ESB.PROMETHEUS.CRM.RESPONSE\"/>\n"
		             + "   </bean>\n"
		             + "   <bean class=\"org.springframework.jndi.JndiObjectFactoryBean\"\n"
		             + "         id=\"jmsEsbPrometheusCrmRequest_queue\">\n"
		             + "      <property name=\"jndiName\" value=\"jms/ESB.PROMETHEUS.CRM.REQUEST\"/>\n"
		             + "   </bean>\n"
		             + "   <ns2:channel id=\"jmsEsbPrometheusCrmIn_channel\"/>\n"
		             + "   <ns2:channel id=\"jmsEsbPrometheusCrmOut_channel\"/>\n"
		             + "   <ns3:inbound-gateway request-destination=\"jmsEsbPrometheusCrmIn_queue\"\n"
		             + "                        default-reply-destination=\"jmsEsbPrometheusCrmOut_queue\"\n"
		             + "                        request-channel=\"jmsEsbPrometheusCrmIn_channel\"\n"
		             + "                        reply-channel=\"jmsEsbPrometheusCrmOut_channel\"\n"
		             + "                        id=\"jmsEsbPrometheusCrmCf_jmsin\"\n"
		             + "                        connection-factory=\"jmsEsbPrometheusCrmCf_jndiConnectionFactory\"/>\n"
		             + "   <ns2:channel id=\"jmsEsbPrometheusCrmResponse_channel\"/>\n"
		             + "   <ns2:channel id=\"jmsEsbPrometheusCrmRequest_channel\"/>\n"
		             + "   <ns3:outbound-gateway id=\"jmsEsbPrometheusCrmCf_jmsout\"\n"
		             + "                         request-channel=\"jmsEsbPrometheusCrmResponse_channel\"\n"
		             + "                         reply-channel=\"jmsEsbPrometheusCrmRequest_channel\"\n"
		             + "                         receive-timeout=\"30000\"\n"
		             + "                         reply-timeout=\"30000\"\n"
		             + "                         request-destination=\"jmsEsbPrometheusCrmResponse_queue\"\n"
		             + "                         reply-destination=\"jmsEsbPrometheusCrmRequest_queue\"\n"
		             + "                         connection-factory=\"jmsEsbPrometheusCrmCf_jndiConnectionFactory\"\n"
		             + "                         header-mapper=\"defHeaderMapper\"/>\n"
		             + "   <bean class=\"org.springframework.jndi.JndiObjectFactoryBean\"\n"
		             + "         id=\"jmsEsbPrometheusAsyncCf_jndiConnectionFactory\">\n"
		             + "      <property name=\"jndiName\" value=\"jms/ESB.PROMETHEUS.ASYNC.CF\"/>\n"
		             + "   </bean>\n"
		             + "   <bean class=\"org.springframework.jndi.JndiObjectFactoryBean\"\n"
		             + "         id=\"jmsEsbPrometheusAsyncIn_queue\">\n"
		             + "      <property name=\"jndiName\" value=\"jms/ESB.PROMETHEUS.ASYNC.IN\"/>\n"
		             + "   </bean>\n"
		             + "   <bean class=\"org.springframework.jndi.JndiObjectFactoryBean\"\n"
		             + "         id=\"jmsEsbPrometheusAsyncOut_queue\">\n"
		             + "      <property name=\"jndiName\" value=\"jms/ESB.PROMETHEUS.ASYNC.OUT\"/>\n"
		             + "   </bean>\n"
		             + "   <bean class=\"org.springframework.jndi.JndiObjectFactoryBean\"\n"
		             + "         id=\"jmsEsbPrometheusAsyncRequest_queue\">\n"
		             + "      <property name=\"jndiName\" value=\"jms/ESB.PROMETHEUS.ASYNC.REQUEST\"/>\n"
		             + "   </bean>\n"
		             + "   <bean class=\"org.springframework.jndi.JndiObjectFactoryBean\"\n"
		             + "         id=\"jmsEsbPrometheusAsyncResponse_queue\">\n"
		             + "      <property name=\"jndiName\" value=\"jms/ESB.PROMETHEUS.ASYNC.RESPONSE\"/>\n"
		             + "   </bean>\n"
		             + "   <ns2:channel id=\"jmsEsbPrometheusAsyncIn_channel\"/>\n"
		             + "   <ns2:channel id=\"jmsEsbPrometheusAsyncOut_channel\"/>\n"
		             + "   <ns3:inbound-gateway request-destination=\"jmsEsbPrometheusAsyncIn_queue\"\n"
		             + "                        default-reply-destination=\"jmsEsbPrometheusAsyncOut_queue\"\n"
		             + "                        request-channel=\"jmsEsbPrometheusAsyncIn_channel\"\n"
		             + "                        reply-channel=\"jmsEsbPrometheusAsyncOut_channel\"\n"
		             + "                        id=\"jmsEsbPrometheusAsyncCf_jmsin\"\n"
		             + "                        connection-factory=\"jmsEsbPrometheusAsyncCf_jndiConnectionFactory"
		             + "\"/>\n"
		             + "   <ns2:channel id=\"jmsEsbPrometheusAsyncRequest_channel\"/>\n"
		             + "   <ns2:channel id=\"jmsEsbPrometheusAsyncResponse_channel\"/>\n"
		             + "   <ns3:outbound-gateway id=\"jmsEsbPrometheusAsyncCf_jmsout\"\n"
		             + "                         request-channel=\"jmsEsbPrometheusAsyncRequest_channel\"\n"
		             + "                         reply-channel=\"jmsEsbPrometheusAsyncResponse_channel\"\n"
		             + "                         receive-timeout=\"30000\"\n"
		             + "                         reply-timeout=\"30000\"\n"
		             + "                         request-destination=\"jmsEsbPrometheusAsyncRequest_queue\"\n"
		             + "                         reply-destination=\"jmsEsbPrometheusAsyncResponse_queue\"\n"
		             + "                         connection-factory=\"jmsEsbPrometheusAsyncCf_jndiConnectionFactory"
		             + "\"\n"
		             + "                         header-mapper=\"defHeaderMapper\"/>\n"
		             + "   <bean class=\"org.springframework.jndi.JndiObjectFactoryBean\"\n"
		             + "         id=\"jmsEsbPrometheusMdMCf_jndiConnectionFactory\">\n"
		             + "      <property name=\"jndiName\" value=\"jms/ESB.PROMETHEUS.MDM.CF\"/>\n"
		             + "   </bean>\n"
		             + "   <bean class=\"org.springframework.jndi.JndiObjectFactoryBean\"\n"
		             + "         id=\"jmsEsbPrometheusMdMIn_queue\">\n"
		             + "      <property name=\"jndiName\" value=\"jms/ESB.PROMETHEUS.MDM.IN\"/>\n"
		             + "   </bean>\n"
		             + "   <bean class=\"org.springframework.jndi.JndiObjectFactoryBean\"\n"
		             + "         id=\"jmsEsbPrometheusMdMOut_queue\">\n"
		             + "      <property name=\"jndiName\" value=\"jms/ESB.PROMETHEUS.MDM.OUT\"/>\n"
		             + "   </bean>\n"
		             + "   <ns2:channel id=\"jmsEsbPrometheusMdMIn_channel\"/>\n"
		             + "   <ns2:channel id=\"jmsEsbPrometheusMdMOut_channel\"/>\n"
		             + "   <ns3:inbound-gateway request-destination=\"jmsEsbPrometheusMdMIn_queue\"\n"
		             + "                        default-reply-destination=\"jmsEsbPrometheusMdMOut_queue\"\n"
		             + "                        request-channel=\"jmsEsbPrometheusMdMIn_channel\"\n"
		             + "                        reply-channel=\"jmsEsbPrometheusMdMOut_channel\"\n"
		             + "                        id=\"jmsEsbPrometheusMdMCf_jmsin\"\n"
		             + "                        connection-factory=\"jmsEsbPrometheusMdMCf_jndiConnectionFactory\"/>\n"
		             + "   <ns3:outbound-gateway id=\"jmsEsbPrometheusMdMCf_jmsout\"\n"
		             + "                         request-channel=\"jmsEsbPrometheusMdMIn_channel\"\n"
		             + "                         reply-channel=\"jmsEsbPrometheusMdMOut_channel\"\n"
		             + "                         receive-timeout=\"30000\"\n"
		             + "                         reply-timeout=\"30000\"\n"
		             + "                         request-destination=\"jmsEsbPrometheusMdMIn_queue\"\n"
		             + "                         reply-destination=\"jmsEsbPrometheusMdMOut_queue\"\n"
		             + "                         connection-factory=\"jmsEsbPrometheusMdMCf_jndiConnectionFactory\"\n"
		             + "                         header-mapper=\"defHeaderMapper\"/>\n"
		             + "   <ns2:service-activator output-channel=\"MockInboundRequestAggregated\"\n"
		             + "                          input-channel=\"jmsQPrometheusJupiterSaIn_channel\"\n"
		             + "                          method=\"aggregate\">\n"
		             + "      <bean class=\"ru.sbt.bpm.mock.spring.bean.MessageAggregator\">\n"
		             + "         <constructor-arg type=\"ru.sbt.bpm.mock.config.enums.Protocol\" value=\"JMS\"/>\n"
		             + "         <constructor-arg type=\"java.lang.String\" value=\"jms/Q.PROMETHEUS.JUPITER-SA"
		             + ".CF\"/>\n"
		             + "         <constructor-arg type=\"java.lang.String\" value=\"jms/Q.PROMETHEUS.JUPITER-SA"
		             + ".IN\"/>\n"
		             + "      </bean>\n"
		             + "   </ns2:service-activator>\n"
		             + "   <ns2:channel id=\"jmsQPrometheusJupiterSaOut_routerChannel\"/>\n"
		             + "   <ns2:router input-channel=\"MockOutboundRouterResponse\"\n"
		             + "               expression=\"payload.jmsConnectionFactoryName+'_'+payload.queue\"\n"
		             + "               id=\"MockRouter\">\n"
		             + "      <ns2:mapping value=\"jms/Q.PROMETHEUS.JUPITER-SA.CF_jms/Q.PROMETHEUS.JUPITER-SA.OUT\"\n"
		             + "                   channel=\"jmsQPrometheusJupiterSaOut_routerChannel\"/>\n"
		             + "      <ns2:mapping value=\"jms/Q.PROMETHEUS.JUPITER-REG.CF_jms/Q.PROMETHEUS.JUPITER-REG"
		             + ".OUT\"\n"
		             + "                   channel=\"jmsQPrometheusJupiterRegOut_routerChannel\"/>\n"
		             + "      <ns2:mapping value=\"jms/ESB.PROMETHEUS.CRM.CF_jms/ESB.PROMETHEUS.CRM.OUT\"\n"
		             + "                   channel=\"jmsEsbPrometheusCrmOut_routerChannel\"/>\n"
		             + "      <ns2:mapping value=\"jms/ESB.PROMETHEUS.CRM.CF_jms/ESB.PROMETHEUS.CRM.OUT\"\n"
		             + "                   channel=\"jmsEsbPrometheusCrmOut_routerChannel\"/>\n"
		             + "      <ns2:mapping value=\"jms/ESB.PROMETHEUS.ASYNC.CF_jms/ESB.PROMETHEUS.ASYNC.OUT\"\n"
		             + "                   channel=\"jmsEsbPrometheusAsyncOut_routerChannel\"/>\n"
		             + "      <ns2:mapping value=\"jms/ESB.PROMETHEUS.MDM.CF_jms/ESB.PROMETHEUS.MDM.OUT\"\n"
		             + "                   channel=\"jmsEsbPrometheusMdMOut_routerChannel\"/>\n"
		             + "   </ns2:router>\n"
		             + "   <ns2:service-activator output-channel=\"jms/Q.PROMETHEUS.JUPITER-SA.OUT\"\n"
		             + "                          input-channel=\"jmsQPrometheusJupiterSaOut_routerChannel\"\n"
		             + "                          expression=\"payload.payload\"/>\n"
		             + "   <ns2:channel id=\"jmsQPrometheusJupiterRegIn_routerChannel\"/>\n"
		             + "   <ns2:router input-channel=\"DriverRouterChannelInput\"\n"
		             + "               expression=\"payload.jmsConnectionFactoryName+'_'+payload.queue\"\n"
		             + "               id=\"DriverRouter\">\n"
		             + "      <ns2:mapping value=\"jms/Q.PROMETHEUS.JUPITER-SA.CF_jms/Q.PROMETHEUS.JUPITER-REG.IN\"\n"
		             + "                   channel=\"jmsQPrometheusJupiterRegIn_routerChannel\"/>\n"
		             + "      <ns2:mapping value=\"jms/Q.PROMETHEUS.JUPITER-REG.CF_jms/Q.PROMETHEUS.JUPITER"
		             + ".RESPONSE\"\n"
		             + "                   channel=\"jmsQPrometheusJupiterResponse_routerChannel\"/>\n"
		             + "      <ns2:mapping value=\"jms/ESB.PROMETHEUS.CRM.CF_jms/ESB.PROMETHEUS.CRM.RESPONSE\"\n"
		             + "                   channel=\"jmsEsbPrometheusCrmResponse_routerChannel\"/>\n"
		             + "      <ns2:mapping value=\"jms/ESB.PROMETHEUS.CRM.CF_jms/ESB.PROMETHEUS.CRM.RESPONSE\"\n"
		             + "                   channel=\"jmsEsbPrometheusCrmResponse_routerChannel\"/>\n"
		             + "      <ns2:mapping value=\"jms/ESB.PROMETHEUS.ASYNC.CF_jms/ESB.PROMETHEUS.ASYNC.REQUEST\"\n"
		             + "                   channel=\"jmsEsbPrometheusAsyncRequest_routerChannel\"/>\n"
		             + "      <ns2:mapping value=\"jms/ESB.PROMETHEUS.MDM.CF_jms/ESB.PROMETHEUS.MDM.IN\"\n"
		             + "                   channel=\"jmsEsbPrometheusMdMIn_routerChannel\"/>\n"
		             + "   </ns2:router>\n"
		             + "   <ns2:service-activator output-channel=\"DriverOutboundRequest\"\n"
		             + "                          input-channel=\"jmsQPrometheusJupiterRegIn_routerChannel\"\n"
		             + "                          expression=\"payload.payload\"/>\n"
		             + "   <ns2:service-activator output-channel=\"MockInboundRequestAggregated\"\n"
		             + "                          input-channel=\"jmsQPrometheusJupiterRegIn_channel\"\n"
		             + "                          method=\"aggregate\">\n"
		             + "      <bean class=\"ru.sbt.bpm.mock.spring.bean.MessageAggregator\">\n"
		             + "         <constructor-arg type=\"ru.sbt.bpm.mock.config.enums.Protocol\" value=\"JMS\"/>\n"
		             + "         <constructor-arg type=\"java.lang.String\" value=\"jms/Q.PROMETHEUS.JUPITER-REG"
		             + ".CF\"/>\n"
		             + "         <constructor-arg type=\"java.lang.String\" value=\"jms/Q.PROMETHEUS.JUPITER-REG"
		             + ".IN\"/>\n"
		             + "      </bean>\n"
		             + "   </ns2:service-activator>\n"
		             + "   <ns2:channel id=\"jmsQPrometheusJupiterRegOut_routerChannel\"/>\n"
		             + "   <ns2:service-activator output-channel=\"jms/Q.PROMETHEUS.JUPITER-REG.OUT\"\n"
		             + "                          input-channel=\"jmsQPrometheusJupiterRegOut_routerChannel\"\n"
		             + "                          expression=\"payload.payload\"/>\n"
		             + "   <ns2:channel id=\"jmsQPrometheusJupiterResponse_routerChannel\"/>\n"
		             + "   <ns2:service-activator output-channel=\"DriverOutboundRequest\"\n"
		             + "                          input-channel=\"jmsQPrometheusJupiterResponse_routerChannel\"\n"
		             + "                          expression=\"payload.payload\"/>\n"
		             + "   <ns2:service-activator output-channel=\"MockInboundRequestAggregated\"\n"
		             + "                          input-channel=\"jmsEsbPrometheusCrmIn_channel\"\n"
		             + "                          method=\"aggregate\">\n"
		             + "      <bean class=\"ru.sbt.bpm.mock.spring.bean.MessageAggregator\">\n"
		             + "         <constructor-arg type=\"ru.sbt.bpm.mock.config.enums.Protocol\" value=\"JMS\"/>\n"
		             + "         <constructor-arg type=\"java.lang.String\" value=\"jms/ESB.PROMETHEUS.CRM.CF\"/>\n"
		             + "         <constructor-arg type=\"java.lang.String\" value=\"jms/ESB.PROMETHEUS.CRM.IN\"/>\n"
		             + "      </bean>\n"
		             + "   </ns2:service-activator>\n"
		             + "   <ns2:channel id=\"jmsEsbPrometheusCrmOut_routerChannel\"/>\n"
		             + "   <ns2:service-activator output-channel=\"jms/ESB.PROMETHEUS.CRM.OUT\"\n"
		             + "                          input-channel=\"jmsEsbPrometheusCrmOut_routerChannel\"\n"
		             + "                          expression=\"payload.payload\"/>\n"
		             + "   <ns2:channel id=\"jmsEsbPrometheusCrmResponse_routerChannel\"/>\n"
		             + "   <ns2:service-activator output-channel=\"DriverOutboundRequest\"\n"
		             + "                          input-channel=\"jmsEsbPrometheusCrmResponse_routerChannel\"\n"
		             + "                          expression=\"payload.payload\"/>\n"
		             + "   <ns2:service-activator output-channel=\"MockInboundRequestAggregated\"\n"
		             + "                          input-channel=\"jmsEsbPrometheusCrmIn_channel\"\n"
		             + "                          method=\"aggregate\">\n"
		             + "      <bean class=\"ru.sbt.bpm.mock.spring.bean.MessageAggregator\">\n"
		             + "         <constructor-arg type=\"ru.sbt.bpm.mock.config.enums.Protocol\" value=\"JMS\"/>\n"
		             + "         <constructor-arg type=\"java.lang.String\" value=\"jms/ESB.PROMETHEUS.CRM.CF\"/>\n"
		             + "         <constructor-arg type=\"java.lang.String\" value=\"jms/ESB.PROMETHEUS.CRM.IN\"/>\n"
		             + "      </bean>\n"
		             + "   </ns2:service-activator>\n"
		             + "   <ns2:service-activator output-channel=\"jms/ESB.PROMETHEUS.CRM.OUT\"\n"
		             + "                          input-channel=\"jmsEsbPrometheusCrmOut_routerChannel\"\n"
		             + "                          expression=\"payload.payload\"/>\n"
		             + "   <ns2:service-activator output-channel=\"DriverOutboundRequest\"\n"
		             + "                          input-channel=\"jmsEsbPrometheusCrmResponse_routerChannel\"\n"
		             + "                          expression=\"payload.payload\"/>\n"
		             + "   <ns2:service-activator output-channel=\"MockInboundRequestAggregated\"\n"
		             + "                          input-channel=\"jmsEsbPrometheusAsyncIn_channel\"\n"
		             + "                          method=\"aggregate\">\n"
		             + "      <bean class=\"ru.sbt.bpm.mock.spring.bean.MessageAggregator\">\n"
		             + "         <constructor-arg type=\"ru.sbt.bpm.mock.config.enums.Protocol\" value=\"JMS\"/>\n"
		             + "         <constructor-arg type=\"java.lang.String\" value=\"jms/ESB.PROMETHEUS.ASYNC.CF\"/>\n"
		             + "         <constructor-arg type=\"java.lang.String\" value=\"jms/ESB.PROMETHEUS.ASYNC.IN\"/>\n"
		             + "      </bean>\n"
		             + "   </ns2:service-activator>\n"
		             + "   <ns2:channel id=\"jmsEsbPrometheusAsyncOut_routerChannel\"/>\n"
		             + "   <ns2:service-activator output-channel=\"jms/ESB.PROMETHEUS.ASYNC.OUT\"\n"
		             + "                          input-channel=\"jmsEsbPrometheusAsyncOut_routerChannel\"\n"
		             + "                          expression=\"payload.payload\"/>\n"
		             + "   <ns2:channel id=\"jmsEsbPrometheusAsyncRequest_routerChannel\"/>\n"
		             + "   <ns2:service-activator output-channel=\"DriverOutboundRequest\"\n"
		             + "                          input-channel=\"jmsEsbPrometheusAsyncRequest_routerChannel\"\n"
		             + "                          expression=\"payload.payload\"/>\n"
		             + "   <ns2:service-activator output-channel=\"MockInboundRequestAggregated\"\n"
		             + "                          input-channel=\"jmsEsbPrometheusMdMIn_channel\"\n"
		             + "                          method=\"aggregate\">\n"
		             + "      <bean class=\"ru.sbt.bpm.mock.spring.bean.MessageAggregator\">\n"
		             + "         <constructor-arg type=\"ru.sbt.bpm.mock.config.enums.Protocol\" value=\"JMS\"/>\n"
		             + "         <constructor-arg type=\"java.lang.String\" value=\"jms/ESB.PROMETHEUS.MDM.CF\"/>\n"
		             + "         <constructor-arg type=\"java.lang.String\" value=\"jms/ESB.PROMETHEUS.MDM.IN\"/>\n"
		             + "      </bean>\n"
		             + "   </ns2:service-activator>\n"
		             + "   <ns2:channel id=\"jmsEsbPrometheusMdMOut_routerChannel\"/>\n"
		             + "   <ns2:service-activator output-channel=\"jms/ESB.PROMETHEUS.MDM.OUT\"\n"
		             + "                          input-channel=\"jmsEsbPrometheusMdMOut_routerChannel\"\n"
		             + "                          expression=\"payload.payload\"/>\n"
		             + "   <ns2:channel id=\"jmsEsbPrometheusMdMIn_routerChannel\"/>\n"
		             + "   <ns2:service-activator output-channel=\"DriverOutboundRequest\"\n"
		             + "                          input-channel=\"jmsEsbPrometheusMdMIn_routerChannel\"\n"
		             + "                          expression=\"payload.payload\"/>\n"
		             + "</beans>\n", actual);
	}

	private String readFileWithoutBOM(File file) throws IOException {
		BufferedReader br = new BufferedReader(new InputStreamReader(new BOMInputStream(new FileInputStream(file), false)));
		StringBuilder sb = new StringBuilder();
		String line;
		while ((line = br.readLine()) != null)
			sb.append(line);
		return sb.toString();
	}

}
