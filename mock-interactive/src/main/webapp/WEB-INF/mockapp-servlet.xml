<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns:int="http://www.springframework.org/schema/integration"
             xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
             xmlns="http://www.springframework.org/schema/beans"
             xmlns:jms="http://www.springframework.org/schema/integration/jms"
             xsi:schemaLocation="http://www.springframework.org/schema/beans		http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/integration	http://www.springframework.org/schema/integration/spring-integration.xsd
		http://www.springframework.org/schema/integration http://www.springframework.org/schema/integration/spring-integration.xsd
		http://www.springframework.org/schema/integration/jms http://www.springframework.org/schema/integration/jms/spring-integration-jms.xsd">

    <import resource="../contextConfigs/base-config.xml"/>
    <import resource="../contextConfigs/logging-config.xml"/>

    <!-- - - - -  - - - - -  - - - - -  - - - - -  - - - - -  - - - - -  - - - - -  - - - - -  - - - - -  - - - - -  - - - - -  - - - - -  - -->
    <!-- DEPENDS ON SYSTEM-->


    <!-- Настройка используемой конфигурации заглушки-->

    <bean id="connectionFactoryString" class="java.lang.String">
        <constructor-arg value="jms/ESB.CRM.CF"/>
    </bean>

    <!-- - - - - - - -->
    <!--MOCK-->
    <bean id="mockConnectionInputString" class="java.lang.String">
        <constructor-arg value="jms/ESB.CRM.IN"/>
    </bean>
    <bean id="mockConnectionOutputString" class="java.lang.String">
        <constructor-arg value="jms/ESB.CRM.OUT"/>
    </bean>
    <!-- - - - - - - -->
    <!-- DRIVER -->
    <bean id="driverConnectionOutputString" class="java.lang.String">
        <constructor-arg value="jms/ESB.CRM.REQUEST"/>
    </bean>
    <bean id="driverConnectionInputString" class="java.lang.String">
        <constructor-arg value="jms/ESB.CRM.RESPONSE"/>
    </bean>

    <!-- - - - - - - - - - - - - - -->
    <!--                           -->
    <!-- ПРЕДВАРИТЕЛЬНАЯ НАСТРОЙКА -->
    <!--                           -->
    <!-- - - - - - - - - - - - - - -->

    <!--Настройки подключения к JMS-->
    <bean id = "jndiConnectionFactory" class="org.springframework.jndi.JndiObjectFactoryBean">
            <property name="jndiName" value="#{connectionFactoryString}"/>
    </bean>

    <bean id="inboundMockQueue" class="org.springframework.jndi.JndiObjectFactoryBean">
        <property name="jndiName" value="#{mockConnectionInputString}"/>
    </bean>
    <bean id="outboundMockQueue" class="org.springframework.jndi.JndiObjectFactoryBean">
        <property name="jndiName" value="#{mockConnectionOutputString}"/>
    </bean>

    <bean id="requestDriverQueue" class="org.springframework.jndi.JndiObjectFactoryBean">
        <property name="jndiName" value="#{driverConnectionOutputString}"/>
    </bean>
    <bean id="responseDriverQueue" class="org.springframework.jndi.JndiObjectFactoryBean">
        <property name="jndiName" value="#{driverConnectionInputString}"/>
    </bean>

    <jms:inbound-gateway
            id="jmsin"
            request-destination="inboundMockQueue"
            request-channel="MockInboundRequest"
            reply-channel="MockOutboundResponse"
            default-reply-destination="outboundMockQueue"
            connection-factory="jndiConnectionFactory"
    />

    <jms:outbound-gateway
            id="jmsout"
            request-destination="requestDriverQueue"
            reply-destination="responseDriverQueue"
            request-channel="DriverOutboundRequest"
            reply-channel="DriverInboundResponse"
            header-mapper="defHeaderMapper"
            connection-factory="jndiConnectionFactory"
            reply-timeout="30000"
            receive-timeout="30000"
    />

    <!-- Входной и выходной каналы Заглушки-->
    <int:channel id="MockInboundRequest"/>
    <int:channel id="MockOutboundResponse"/>




    <!-- - - - - - - - - - - - -->
    <!--     МАРШРУТИЗАЦИЯ     -->
    <!-- - - - - - - - - - - - -->
    <int:service-activator input-channel="MockInboundRequest" output-channel="MockInboundRequestAggregated"
                           method="aggregate">
        <bean class="ru.sbt.bpm.mock.spring.bean.MessageAggregator">
            <constructor-arg value="JMS" type="ru.sbt.bpm.mock.config.enums.Protocol"/>
            <constructor-arg value="#{connectionFactoryString}" type="java.lang.String"/>
            <constructor-arg value="#{mockConnectionInputString}" type="java.lang.String"/>
        </bean>
    </int:service-activator>

    <int:router id="mockRouter" expression="payload.jmsConnectionFactoryName+'_'+payload.queue" input-channel="MockOutboundRouterResponse">
        <int:mapping value="#{connectionFactoryString+'_'+mockConnectionOutputString}" channel="MockOutboundRouterResponseAggregated"/>
    </int:router>

    <int:channel id="MockOutboundRouterResponseAggregated"/>
    <int:service-activator expression="payload.payload" input-channel="MockOutboundRouterResponseAggregated" output-channel="MockOutboundResponse"/>

    <int:router id="driverRouter" expression="payload.jmsConnectionFactoryName+'_'+payload.queue" input-channel="driverRouterChannelInput">
        <int:mapping value="#{connectionFactoryString+'_'+driverConnectionOutputString}" channel="DriverOutboundRequestAggregated"/>
    </int:router>

    <int:channel id="DriverOutboundRequestAggregated"/>
    <int:service-activator expression="payload.payload" input-channel="DriverOutboundRequestAggregated" output-channel="DriverOutboundRequest"/>

</beans>