<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Copyright (c) 2016, Sberbank and/or its affiliates. All rights reserved.
  ~
  ~ Redistribution and use in source and binary forms, with or without
  ~ modification, are permitted provided that the following conditions
  ~ are met:
  ~
  ~   - Redistributions of source code must retain the above copyright
  ~     notice, this list of conditions and the following disclaimer.
  ~
  ~   - Redistributions in binary form must reproduce the above copyright
  ~     notice, this list of conditions and the following disclaimer in the
  ~     documentation and/or other materials provided with the distribution.
  ~
  ~   - Neither the name of Sberbank or the names of its
  ~     contributors may be used to endorse or promote products derived
  ~     from this software without specific prior written permission.
  ~
  ~ THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS
  ~ IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,
  ~ THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
  ~ PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT OWNER OR
  ~ CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
  ~ EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
  ~ PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
  ~ PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
  ~ LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
  ~ NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
  ~ SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  -->

<beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:int="http://www.springframework.org/schema/integration"
       xmlns="http://www.springframework.org/schema/beans"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/integration http://www.springframework.org/schema/integration/spring-integration.xsd">

    <mvc:annotation-driven/>
    <mvc:resources mapping="resources/**" location="/resources/"/>

    <context:component-scan base-package="ru.sbt.bpm.mock.logging"/>
    <context:component-scan base-package="ru.sbt.bpm.mock.spring"/>

    <context:property-placeholder location="META-INF/maven/ru.sbt.bpm.mock/mock-interactive/pom.properties"
                                  ignore-resource-not-found="true"/>
    <bean id="version" class="java.lang.String">
        <constructor-arg value="${version}" type="java.lang.String"/>
    </bean>


    <!-- upload files resolver-->
    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver"/>

    <bean id="jspResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="prefix" value="/WEB-INF/jsp/"/>
        <property name="suffix" value=".jsp"/>
    </bean>

    <!-- COMMON PART -->
    <bean id="defHeaderMapper" class="org.springframework.integration.jms.DefaultJmsHeaderMapper"/>
    <!--<bean id="responseGenerator" class="ru.sbt.bpm.mock.spring.bean.ResponseGenerator"/>-->

    <!-- gateway for testing feature -->
    <int:gateway service-interface="ru.sbt.bpm.mock.spring.integration.gateway.TestGatewayService">
        <int:method name="test" request-channel="test" reply-channel="test"/>
    </int:gateway>
    <int:channel id="test"/>

    <bean class="ru.sbt.bpm.mock.config.MockConfigContainer">
        <constructor-arg value="/WEB-INF/MockConfig.xml" type="java.lang.String"/>
    </bean>


    <!-- MOCK PART -->
    <!-- Генерация ответа -->
    <int:channel id="MockInboundRequestAggregated"/>
    <int:channel id="MockOutboundRouterResponse"/>
    <int:service-activator input-channel="MockInboundRequestAggregated" output-channel="MockOutboundRouterResponse"
                           expression="@responseGenerator.proceedJmsRequest(payload)"/>

    <!-- Входной и выходной каналы Драйвера -->

    <!-- DRIVER PART -->
    <int:channel id="DriverOutboundRequest"/>
    <int:channel id="DriverInboundResponse"/>

    <int:channel id="DriverRouterChannelInput"/>
    <!-- Mock gateway to send requests to outbound -->
    <int:gateway id="systemEntry"
                 error-channel="DriverInboundResponse"
                 service-interface="ru.sbt.bpm.mock.spring.integration.gateway.ClientService"
    >
        <int:method name="sendMockMessage" request-channel="DriverRouterChannelInput"
                    reply-channel="DriverInboundResponse"/>
    </int:gateway>
</beans>